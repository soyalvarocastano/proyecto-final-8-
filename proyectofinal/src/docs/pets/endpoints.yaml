openapi: 3.0.0
info:
  title: API de Mascotas
  version: 1.0.0
  description: API para gestionar mascotas, usuarios y adopciones.

paths:
  /api/pets/:
    get:
      summary: Traer todas las mascotas
      tags: [Pets]
      responses:
        "200":
          description: Lista de mascotas obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Pets"
        "500":
          description: Error interno en el servidor

    post:
      summary: Crear una nueva mascota
      tags: [Pets]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pets"
      responses:
        "201":
          description: Mascota creada exitosamente

  /api/pets/{uid}:
    get:
      summary: Obtener una mascota por ID
      tags: [Pets]
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Mascota encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pets"

    put:
      summary: Actualizar datos de una mascota
      tags: [Pets]
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePet"
      responses:
        "200":
          description: Mascota actualizada correctamente

    delete:
      summary: Eliminar una mascota
      tags: [Pets]
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Mascota eliminada correctamente

  /api/users/:
    get:
      summary: Listar todos los usuarios
      tags: [Users]
      responses:
        "200":
          description: Lista de usuarios obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"

    post:
      summary: Crear un nuevo usuario
      tags: [Users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: Usuario creado exitosamente

  /api/users/{uid}:
    get:
      summary: Obtener un usuario por ID
      tags: [Users]
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Usuario encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"

    put:
      summary: Actualizar usuario
      tags: [Users]
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: Usuario actualizado correctamente

    delete:
      summary: Eliminar usuario
      tags: [Users]
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Usuario eliminado correctamente

  /api/adoptions/:
    get:
      summary: Listar todas las adopciones
      tags: [Adoptions]
      responses:
        "200":
          description: Lista de adopciones obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Adoption"

    post:
      summary: Registrar una nueva adopción
      tags: [Adoptions]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Adoption"
      responses:
        "201":
          description: Adopción registrada exitosamente

  /api/adoptions/{uid}:
    get:
      summary: Obtener una adopción por ID
      tags: [Adoptions]
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Adopción encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Adoption"

    put:
      summary: Actualizar adopción
      tags: [Adoptions]
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Adoption"
      responses:
        "200":
          description: Adopción actualizada correctamente

    delete:
      summary: Eliminar una adopción
      tags: [Adoptions]
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Adopción eliminada correctamente

  /api/sessions/register:
    post:
      summary: Registrar un nuevo usuario
      tags: [Sessions]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: Usuario registrado exitosamente

  /api/sessions/login:
    post:
      summary: Iniciar sesión
      tags: [Sessions]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: Inicio de sesión exitoso
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        "401":
          description: Credenciales inválidas

  /api/sessions/current:
    get:
      summary: Obtener sesión actual (autenticada)
      tags: [Sessions]
      responses:
        "200":
          description: Usuario autenticado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: No autenticado

components:
  schemas:
    Pets:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        specie:
          type: string
        birthDate:
          type: string
          format: date
        adopted:
          type: boolean
        owner:
          $ref: "#/components/schemas/User"
        image:
          type: string
      example:
        _id: "453k5nk34jn5as"
        name: Pichichu
        specie: Caniche
        birthDate: 2023-10-10
        adopted: false
        owner: {}
        image: ""

    UpdatePet:
      type: object
      properties:
        name:
          type: string
        specie:
          type: string
        birthDate:
          type: string
          format: date
        adopted:
          type: boolean
        owner:
          $ref: "#/components/schemas/User"
        image:
          type: string
      example:
        name: Pablo
        specie: Caniche
        birthDate: 2024-10-10
        adopted: false
        owner: {}
        image: ""

    User:
      type: object
      properties:
        _id:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
      example:
        _id: "123abc"
        first_name: Juan
        last_name: Pérez
        email: juan@example.com
        password: "123456"

    Adoption:
      type: object
      properties:
        petId:
          type: string
        adopterId:
          type: string
        adoptionDate:
          type: string
          format: date
      example:
        petId: "453k5nk34jn5as"
        adopterId: "123abc"
        adoptionDate: 2024-04-15
